# Generated by Django 4.2.16 on 2024-11-10 10:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('academic', '0001_initial'),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Enter the occupation (e.g., Doctor, Engineer).', max_length=100, verbose_name='Occupation')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=150)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=6)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('place_of_birth', models.CharField(max_length=128)),
                ('current_address', models.CharField(max_length=255)),
                ('permanent_address', models.CharField(max_length=255)),
                ('mobile_number', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'Enter a valid 11-digit mobile number.')])),
                ('email', models.EmailField(max_length=254)),
                ('general_health', models.CharField(choices=[('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor')], max_length=50)),
                ('immunization', models.CharField(choices=[('FULLY_VACCINATED', 'Fully Vaccinated'), ('PARTIALLY_VACCINATED', 'Partially Vaccinated'), ('NOT_VACCINATED', 'Not Vaccinated')], max_length=50)),
                ('disabilities', models.CharField(blank=True, max_length=255, null=True)),
                ('mark_of_identification', models.CharField(blank=True, max_length=255, null=True)),
                ('child', models.CharField(blank=True, max_length=100, null=True)),
                ('form_b_no', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_residence', models.CharField(blank=True, max_length=15, null=True)),
                ('office_address', models.CharField(blank=True, max_length=255, null=True)),
                ('father_full_name', models.CharField(max_length=100)),
                ('father_cnic', models.CharField(max_length=15)),
                ('father_occupation', models.CharField(max_length=100)),
                ('mother_full_name', models.CharField(max_length=100)),
                ('mother_cnic', models.CharField(max_length=15)),
                ('mother_occupation', models.CharField(max_length=100)),
                ('mother_mobile_number', models.CharField(max_length=11)),
                ('mother_email', models.EmailField(max_length=254)),
                ('mother_office_address', models.CharField(max_length=255)),
                ('mother_is_alive', models.BooleanField(default=True)),
                ('guardian_full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_cnic', models.CharField(blank=True, max_length=15, null=True)),
                ('guardian_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_mobile_number', models.CharField(blank=True, max_length=11, null=True)),
                ('guardian_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('guardian_home_address', models.CharField(blank=True, max_length=255, null=True)),
                ('guardian_office_address', models.CharField(blank=True, max_length=255, null=True)),
                ('guardian_relation_to_child', models.CharField(choices=[('FATHER', 'Father'), ('MOTHER', 'Mother'), ('GUARDIAN', 'Guardian'), ('OTHER', 'Other')], max_length=50)),
                ('guardian_pick_and_drop', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], max_length=20)),
                ('guardian_pick_and_drop_by', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_pick_and_drop_cnic', models.CharField(blank=True, max_length=15, null=True)),
                ('admission_no', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('admission_type', models.CharField(choices=[('REGULAR', 'Regular'), ('TRANSFER', 'Transfer'), ('RE_ADMISSION', 'Re-Admission')], max_length=50)),
                ('admission_confirmation_date', models.DateField(blank=True, null=True)),
                ('marks_in_previous_school', models.PositiveIntegerField(blank=True, null=True)),
                ('previous_school_roll_no', models.CharField(blank=True, max_length=20, null=True)),
                ('enrollment_status', models.CharField(choices=[('ENROLLED', 'Enrolled'), ('PENDING', 'Pending'), ('WITHDRAWN', 'Withdrawn')], max_length=50)),
                ('test_passed', models.BooleanField(default=False)),
                ('fee_remaining_for_months', models.PositiveIntegerField(blank=True, null=True)),
                ('monthly_income', models.PositiveIntegerField(blank=True, null=True)),
                ('paid_dues_upto_slc', models.DateField(blank=True, null=True)),
                ('advance', models.PositiveIntegerField(default=0)),
                ('arrears', models.PositiveIntegerField(default=0)),
                ('total_arrear_months', models.PositiveIntegerField(default=0)),
                ('extra_act', models.TextField(blank=True, null=True)),
                ('sibling', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('is_alive', models.BooleanField(default=True)),
                ('is_security_voucher_generated', models.BooleanField(default=False)),
                ('is_voucher_generated', models.BooleanField(default=False)),
                ('admission_by', models.CharField(max_length=100)),
                ('other_information', models.TextField(blank=True, null=True)),
                ('admission_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('admission_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.class')),
                ('admission_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.section')),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Applicant')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.category')),
                ('class_required', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_class', to='academic.class')),
                ('nationality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.nationality')),
                ('religion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.religion')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
    ]
