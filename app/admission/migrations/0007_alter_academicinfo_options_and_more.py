# Generated by Django 4.2.16 on 2024-10-30 12:46

import app.admission.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0005_alter_category_options_alter_province_options_and_more'),
        ('academic', '0006_alter_class_options_alter_department_options_and_more'),
        ('admission', '0006_remove_additionalinfo_other_information_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='academicinfo',
            options={},
        ),
        migrations.AlterModelOptions(
            name='additionalinfo',
            options={},
        ),
        migrations.AlterModelOptions(
            name='financialinfo',
            options={},
        ),
        migrations.AlterModelOptions(
            name='parentinfo',
            options={},
        ),
        migrations.AlterModelOptions(
            name='personalinfo',
            options={},
        ),
        migrations.AlterField(
            model_name='academicinfo',
            name='admission_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admitted_class', to='academic.class', verbose_name='Admission Class'),
        ),
        migrations.AlterField(
            model_name='academicinfo',
            name='admission_confirmation_date',
            field=models.DateField(blank=True, help_text='Date when admission was confirmed', null=True, verbose_name='Admission Confirmation Date'),
        ),
        migrations.AlterField(
            model_name='academicinfo',
            name='admission_no',
            field=models.CharField(blank=True, help_text='Unique admission number for the student', max_length=12, null=True, unique=True, verbose_name='Admission Number'),
        ),
        migrations.AlterField(
            model_name='academicinfo',
            name='admission_section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.section', verbose_name='Admission Section'),
        ),
        migrations.AlterField(
            model_name='academicinfo',
            name='admission_type',
            field=models.CharField(choices=[('REGULAR', 'Regular'), ('TRANSFER', 'Transfer'), ('RE_ADMISSION', 'Re-Admission')], help_text='Type of admission (New/Transfer)', max_length=50, verbose_name='Admission Type'),
        ),
        migrations.AlterField(
            model_name='academicinfo',
            name='enrollment_status',
            field=models.CharField(choices=[('ENROLLED', 'Enrolled'), ('PENDING', 'Pending'), ('WITHDRAWN', 'Withdrawn')], help_text='Current enrollment status of the student', max_length=50, verbose_name='Enrollment Status'),
        ),
        migrations.AlterField(
            model_name='academicinfo',
            name='marks_in_previous_school',
            field=models.PositiveIntegerField(blank=True, help_text='Marks obtained in previous school', null=True, verbose_name='Marks in Previous School'),
        ),
        migrations.AlterField(
            model_name='academicinfo',
            name='previous_school_roll_no',
            field=models.CharField(blank=True, help_text='Roll number in the previous school', max_length=20, null=True, verbose_name='Previous School Roll No'),
        ),
        migrations.AlterField(
            model_name='academicinfo',
            name='test_passed',
            field=models.BooleanField(default=False, help_text='Indicates whether the admission test was passed', verbose_name='Test Passed'),
        ),
        migrations.AlterField(
            model_name='additionalinfo',
            name='extra_act',
            field=models.TextField(blank=True, help_text='Details of extracurricular activities', null=True, verbose_name='Extracurricular Activities'),
        ),
        migrations.AlterField(
            model_name='additionalinfo',
            name='is_alive',
            field=models.BooleanField(default=True, help_text='Indicates if the student is alive', verbose_name='Is Alive'),
        ),
        migrations.AlterField(
            model_name='additionalinfo',
            name='is_security_voucher_generated',
            field=models.BooleanField(default=False, help_text='Indicates if a security voucher has been generated', verbose_name='Security Voucher Generated'),
        ),
        migrations.AlterField(
            model_name='additionalinfo',
            name='is_voucher_generated',
            field=models.BooleanField(default=False, help_text='Indicates if a voucher has been generated', verbose_name='Voucher Generated'),
        ),
        migrations.AlterField(
            model_name='additionalinfo',
            name='nationality',
            field=models.CharField(choices=[('Pakistani', 'Pakistani'), ('Indian', 'Indian'), ('Bangladeshi', 'Bangladeshi')], help_text='Nationality of the student', max_length=50, verbose_name='Nationality'),
        ),
        migrations.AlterField(
            model_name='additionalinfo',
            name='religion',
            field=models.CharField(choices=[('Islam', 'Islam'), ('Christianity', 'Christianity'), ('Hinduism', 'Hinduism')], help_text='Religion of the student', max_length=50, verbose_name='Religion'),
        ),
        migrations.AlterField(
            model_name='additionalinfo',
            name='remarks',
            field=models.TextField(blank=True, help_text='Any additional remarks', null=True, verbose_name='Remarks'),
        ),
        migrations.AlterField(
            model_name='additionalinfo',
            name='sibling',
            field=models.TextField(blank=True, help_text='Information about siblings', null=True, verbose_name='Sibling Information'),
        ),
        migrations.AlterField(
            model_name='admission',
            name='academic_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.academicinfo', verbose_name='Academic Information'),
        ),
        migrations.AlterField(
            model_name='admission',
            name='additional_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.additionalinfo', verbose_name='Additional Information'),
        ),
        migrations.AlterField(
            model_name='admission',
            name='financial_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.financialinfo', verbose_name='Financial Information'),
        ),
        migrations.AlterField(
            model_name='admission',
            name='parent_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.parentinfo', verbose_name='Parent Information'),
        ),
        migrations.AlterField(
            model_name='admission',
            name='personal_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.personalinfo', verbose_name='Personal Information'),
        ),
        migrations.AlterField(
            model_name='financialinfo',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.category', verbose_name='Category'),
        ),
        migrations.AlterField(
            model_name='financialinfo',
            name='fee_remaining_for_months',
            field=models.PositiveIntegerField(blank=True, help_text='Number of months with remaining fees', null=True, verbose_name='Fee Remaining for Months (if any)'),
        ),
        migrations.AlterField(
            model_name='financialinfo',
            name='monthly_income',
            field=models.PositiveIntegerField(blank=True, help_text='Monthly income of the guardian', null=True, verbose_name='Monthly Income'),
        ),
        migrations.AlterField(
            model_name='financialinfo',
            name='paid_dues_upto_slc',
            field=models.DateField(blank=True, help_text='Date of paid dues up to the SLC', null=True, verbose_name='Paid Dues up to School Leaving Certificate'),
        ),
        migrations.AlterField(
            model_name='occupation',
            name='name',
            field=models.CharField(help_text='Enter the occupation (e.g., Doctor, Engineer).', max_length=100, verbose_name='Occupation'),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='father_cnic',
            field=models.CharField(help_text="Enter the father's CNIC.", max_length=15, validators=[app.admission.models.validate_cnic], verbose_name="Father's CNIC"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='father_full_name',
            field=models.CharField(help_text="Enter the father's full name.", max_length=100, verbose_name='Father Full Name'),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='father_occupation',
            field=models.ForeignKey(help_text="Select father's occupation.", on_delete=django.db.models.deletion.CASCADE, related_name='parentinfo_father_occupation', to='admission.occupation', verbose_name="Father's Occupation"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='guardian_cnic',
            field=models.CharField(help_text="Enter the guardian's CNIC.", max_length=15, validators=[app.admission.models.validate_cnic], verbose_name="Guardian's CNIC"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='guardian_email',
            field=models.EmailField(help_text='Enter a valid email address.', max_length=254, verbose_name="Guardian's Email Address"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='guardian_full_name',
            field=models.CharField(help_text="Enter the guardian's full name.", max_length=100, verbose_name='Guardian Full Name'),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='guardian_home_address',
            field=models.CharField(help_text="Enter the guardian's home address.", max_length=255, verbose_name="Guardian's Home Address"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='guardian_mobile_number',
            field=models.CharField(help_text="Enter the guardian's 11-digit mobile number.", max_length=11, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'Enter a valid 11-digit mobile number.')], verbose_name="Guardian's Mobile Number"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='guardian_occupation',
            field=models.ForeignKey(help_text="Select guardian's occupation.", on_delete=django.db.models.deletion.CASCADE, related_name='parentinfo_guardian_occupation', to='admission.occupation', verbose_name="Guardian's Occupation"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='guardian_office_address',
            field=models.CharField(help_text="Enter the guardian's office address.", max_length=255, verbose_name="Guardian's Office Address"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='guardian_relation_to_child',
            field=models.CharField(help_text="Enter the guardian's relation to the child.", max_length=50, verbose_name="Guardian's Relation to Child"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='mother_cnic',
            field=models.CharField(help_text="Enter the mother's CNIC.", max_length=15, validators=[app.admission.models.validate_cnic], verbose_name="Mother's CNIC"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='mother_email',
            field=models.EmailField(help_text='Enter a valid email address.', max_length=254, verbose_name="Mother's Email Address"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='mother_full_name',
            field=models.CharField(help_text="Enter the mother's full name.", max_length=100, verbose_name='Mother Full Name'),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='mother_mobile_number',
            field=models.CharField(help_text="Enter the mother's 11-digit mobile number.", max_length=11, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'Enter a valid 11-digit mobile number.')], verbose_name="Mother's Mobile Number"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='mother_occupation',
            field=models.ForeignKey(help_text="Select mother's occupation.", on_delete=django.db.models.deletion.CASCADE, related_name='parentinfo_mother_occupation', to='admission.occupation', verbose_name="Mother's Occupation"),
        ),
        migrations.AlterField(
            model_name='parentinfo',
            name='mother_office_address',
            field=models.CharField(help_text="Enter the mother's office address.", max_length=255, verbose_name="Mother's Office Address"),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='blood_group',
            field=models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], help_text='Select the blood group.', max_length=3, verbose_name='Blood Group'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='current_address',
            field=models.CharField(help_text='Enter the current address.', max_length=255, verbose_name='Current Address'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='date_of_birth',
            field=models.DateField(help_text='Enter the date of birth.', verbose_name='Date of Birth'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='disabilities',
            field=models.CharField(blank=True, help_text='Enter any known disabilities, if any.', max_length=255, null=True, verbose_name='Disabilities'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='email',
            field=models.EmailField(help_text='Enter a valid email address.', max_length=254, verbose_name='Email Address'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='full_name',
            field=models.CharField(help_text='Enter the full name of the individual.', max_length=150, verbose_name='Full Name'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='gender',
            field=models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], help_text='Select the gender.', max_length=6, verbose_name='Gender'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='general_health',
            field=models.CharField(choices=[('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor')], help_text='Select general health status.', max_length=50, verbose_name='General Health Status'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='immunization',
            field=models.CharField(choices=[('FULLY_VACCINATED', 'Fully Vaccinated'), ('PARTIALLY_VACCINATED', 'Partially Vaccinated'), ('NOT_VACCINATED', 'Not Vaccinated')], help_text='Select immunization status.', max_length=50, verbose_name='Immunization Status'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='mark_of_identification',
            field=models.CharField(blank=True, help_text='Enter any identifying marks, if any.', max_length=255, null=True, verbose_name='Mark of Identification'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='mobile_number',
            field=models.CharField(help_text='Enter an 11-digit mobile number.', max_length=11, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'Enter a valid 11-digit mobile number.')], verbose_name='Mobile Number'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='permanent_address',
            field=models.CharField(help_text='Enter the permanent address.', max_length=255, verbose_name='Permanent Address'),
        ),
        migrations.AlterField(
            model_name='personalinfo',
            name='place_of_birth',
            field=models.CharField(help_text='Enter the place of birth.', max_length=128, verbose_name='Place of Birth'),
        ),
        migrations.AddIndex(
            model_name='academicinfo',
            index=models.Index(fields=['admission_no'], name='admission_no_idx'),
        ),
        migrations.AddIndex(
            model_name='academicinfo',
            index=models.Index(fields=['admission_confirmation_date'], name='adm_conf_date_idx'),
        ),
        migrations.AddIndex(
            model_name='additionalinfo',
            index=models.Index(fields=['nationality'], name='nationality_idx'),
        ),
        migrations.AddIndex(
            model_name='financialinfo',
            index=models.Index(fields=['paid_dues_upto_slc'], name='paid_dues_upto_slc_idx'),
        ),
        migrations.AddIndex(
            model_name='parentinfo',
            index=models.Index(fields=['father_full_name'], name='father_name_idx'),
        ),
        migrations.AddIndex(
            model_name='parentinfo',
            index=models.Index(fields=['mother_full_name'], name='mother_name_idx'),
        ),
        migrations.AddIndex(
            model_name='parentinfo',
            index=models.Index(fields=['guardian_full_name'], name='guardian_name_idx'),
        ),
        migrations.AddIndex(
            model_name='personalinfo',
            index=models.Index(fields=['full_name'], name='full_name_idx'),
        ),
        migrations.AddIndex(
            model_name='personalinfo',
            index=models.Index(fields=['date_of_birth'], name='dob_idx'),
        ),
    ]
